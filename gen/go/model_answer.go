/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Answer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Answer{}

// Answer struct for Answer
type Answer struct {
	QuestionId *string `json:"question_id,omitempty"`
	Answer *string `json:"answer,omitempty"`
}

// NewAnswer instantiates a new Answer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnswer() *Answer {
	this := Answer{}
	return &this
}

// NewAnswerWithDefaults instantiates a new Answer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnswerWithDefaults() *Answer {
	this := Answer{}
	return &this
}

// GetQuestionId returns the QuestionId field value if set, zero value otherwise.
func (o *Answer) GetQuestionId() string {
	if o == nil || IsNil(o.QuestionId) {
		var ret string
		return ret
	}
	return *o.QuestionId
}

// GetQuestionIdOk returns a tuple with the QuestionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Answer) GetQuestionIdOk() (*string, bool) {
	if o == nil || IsNil(o.QuestionId) {
		return nil, false
	}
	return o.QuestionId, true
}

// HasQuestionId returns a boolean if a field has been set.
func (o *Answer) HasQuestionId() bool {
	if o != nil && !IsNil(o.QuestionId) {
		return true
	}

	return false
}

// SetQuestionId gets a reference to the given string and assigns it to the QuestionId field.
func (o *Answer) SetQuestionId(v string) {
	o.QuestionId = &v
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *Answer) GetAnswer() string {
	if o == nil || IsNil(o.Answer) {
		var ret string
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Answer) GetAnswerOk() (*string, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *Answer) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given string and assigns it to the Answer field.
func (o *Answer) SetAnswer(v string) {
	o.Answer = &v
}

func (o Answer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Answer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuestionId) {
		toSerialize["question_id"] = o.QuestionId
	}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	return toSerialize, nil
}

type NullableAnswer struct {
	value *Answer
	isSet bool
}

func (v NullableAnswer) Get() *Answer {
	return v.value
}

func (v *NullableAnswer) Set(val *Answer) {
	v.value = val
	v.isSet = true
}

func (v NullableAnswer) IsSet() bool {
	return v.isSet
}

func (v *NullableAnswer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnswer(val *Answer) *NullableAnswer {
	return &NullableAnswer{value: val, isSet: true}
}

func (v NullableAnswer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnswer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


