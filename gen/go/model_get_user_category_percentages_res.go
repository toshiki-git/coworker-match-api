/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetUserCategoryPercentagesRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserCategoryPercentagesRes{}

// GetUserCategoryPercentagesRes Response object containing the user's interest percentages for various categories
type GetUserCategoryPercentagesRes struct {
	// User's unique identifier
	UserId string `json:"userId"`
	// List of categories with user's interest levels
	Categories []CategoryInterest `json:"categories"`
}

type _GetUserCategoryPercentagesRes GetUserCategoryPercentagesRes

// NewGetUserCategoryPercentagesRes instantiates a new GetUserCategoryPercentagesRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserCategoryPercentagesRes(userId string, categories []CategoryInterest) *GetUserCategoryPercentagesRes {
	this := GetUserCategoryPercentagesRes{}
	this.UserId = userId
	this.Categories = categories
	return &this
}

// NewGetUserCategoryPercentagesResWithDefaults instantiates a new GetUserCategoryPercentagesRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserCategoryPercentagesResWithDefaults() *GetUserCategoryPercentagesRes {
	this := GetUserCategoryPercentagesRes{}
	return &this
}

// GetUserId returns the UserId field value
func (o *GetUserCategoryPercentagesRes) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *GetUserCategoryPercentagesRes) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *GetUserCategoryPercentagesRes) SetUserId(v string) {
	o.UserId = v
}

// GetCategories returns the Categories field value
func (o *GetUserCategoryPercentagesRes) GetCategories() []CategoryInterest {
	if o == nil {
		var ret []CategoryInterest
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *GetUserCategoryPercentagesRes) GetCategoriesOk() ([]CategoryInterest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *GetUserCategoryPercentagesRes) SetCategories(v []CategoryInterest) {
	o.Categories = v
}

func (o GetUserCategoryPercentagesRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserCategoryPercentagesRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["userId"] = o.UserId
	toSerialize["categories"] = o.Categories
	return toSerialize, nil
}

func (o *GetUserCategoryPercentagesRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"userId",
		"categories",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetUserCategoryPercentagesRes := _GetUserCategoryPercentagesRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetUserCategoryPercentagesRes)

	if err != nil {
		return err
	}

	*o = GetUserCategoryPercentagesRes(varGetUserCategoryPercentagesRes)

	return err
}

type NullableGetUserCategoryPercentagesRes struct {
	value *GetUserCategoryPercentagesRes
	isSet bool
}

func (v NullableGetUserCategoryPercentagesRes) Get() *GetUserCategoryPercentagesRes {
	return v.value
}

func (v *NullableGetUserCategoryPercentagesRes) Set(val *GetUserCategoryPercentagesRes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserCategoryPercentagesRes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserCategoryPercentagesRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserCategoryPercentagesRes(val *GetUserCategoryPercentagesRes) *NullableGetUserCategoryPercentagesRes {
	return &NullableGetUserCategoryPercentagesRes{value: val, isSet: true}
}

func (v NullableGetUserCategoryPercentagesRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserCategoryPercentagesRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


