/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetQuestionCardResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetQuestionCardResponseInner{}

// GetQuestionCardResponseInner struct for GetQuestionCardResponseInner
type GetQuestionCardResponseInner struct {
	QuestionCardId string `json:"questionCardId"`
	QuestionCardText string `json:"questionCardText"`
	IsUsed bool `json:"isUsed"`
}

type _GetQuestionCardResponseInner GetQuestionCardResponseInner

// NewGetQuestionCardResponseInner instantiates a new GetQuestionCardResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetQuestionCardResponseInner(questionCardId string, questionCardText string, isUsed bool) *GetQuestionCardResponseInner {
	this := GetQuestionCardResponseInner{}
	this.QuestionCardId = questionCardId
	this.QuestionCardText = questionCardText
	this.IsUsed = isUsed
	return &this
}

// NewGetQuestionCardResponseInnerWithDefaults instantiates a new GetQuestionCardResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetQuestionCardResponseInnerWithDefaults() *GetQuestionCardResponseInner {
	this := GetQuestionCardResponseInner{}
	return &this
}

// GetQuestionCardId returns the QuestionCardId field value
func (o *GetQuestionCardResponseInner) GetQuestionCardId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuestionCardId
}

// GetQuestionCardIdOk returns a tuple with the QuestionCardId field value
// and a boolean to check if the value has been set.
func (o *GetQuestionCardResponseInner) GetQuestionCardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuestionCardId, true
}

// SetQuestionCardId sets field value
func (o *GetQuestionCardResponseInner) SetQuestionCardId(v string) {
	o.QuestionCardId = v
}

// GetQuestionCardText returns the QuestionCardText field value
func (o *GetQuestionCardResponseInner) GetQuestionCardText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuestionCardText
}

// GetQuestionCardTextOk returns a tuple with the QuestionCardText field value
// and a boolean to check if the value has been set.
func (o *GetQuestionCardResponseInner) GetQuestionCardTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuestionCardText, true
}

// SetQuestionCardText sets field value
func (o *GetQuestionCardResponseInner) SetQuestionCardText(v string) {
	o.QuestionCardText = v
}

// GetIsUsed returns the IsUsed field value
func (o *GetQuestionCardResponseInner) GetIsUsed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUsed
}

// GetIsUsedOk returns a tuple with the IsUsed field value
// and a boolean to check if the value has been set.
func (o *GetQuestionCardResponseInner) GetIsUsedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUsed, true
}

// SetIsUsed sets field value
func (o *GetQuestionCardResponseInner) SetIsUsed(v bool) {
	o.IsUsed = v
}

func (o GetQuestionCardResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetQuestionCardResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["questionCardId"] = o.QuestionCardId
	toSerialize["questionCardText"] = o.QuestionCardText
	toSerialize["isUsed"] = o.IsUsed
	return toSerialize, nil
}

func (o *GetQuestionCardResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"questionCardId",
		"questionCardText",
		"isUsed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetQuestionCardResponseInner := _GetQuestionCardResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetQuestionCardResponseInner)

	if err != nil {
		return err
	}

	*o = GetQuestionCardResponseInner(varGetQuestionCardResponseInner)

	return err
}

type NullableGetQuestionCardResponseInner struct {
	value *GetQuestionCardResponseInner
	isSet bool
}

func (v NullableGetQuestionCardResponseInner) Get() *GetQuestionCardResponseInner {
	return v.value
}

func (v *NullableGetQuestionCardResponseInner) Set(val *GetQuestionCardResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetQuestionCardResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetQuestionCardResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetQuestionCardResponseInner(val *GetQuestionCardResponseInner) *NullableGetQuestionCardResponseInner {
	return &NullableGetQuestionCardResponseInner{value: val, isSet: true}
}

func (v NullableGetQuestionCardResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetQuestionCardResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


