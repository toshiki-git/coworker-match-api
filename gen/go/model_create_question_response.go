/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CreateQuestionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateQuestionResponse{}

// CreateQuestionResponse struct for CreateQuestionResponse
type CreateQuestionResponse struct {
	MatchingId *string `json:"matching_id,omitempty"`
	SenderUserId *string `json:"sender_user_id,omitempty"`
	ReceiverUserId *string `json:"receiver_user_id,omitempty"`
	MatchingDate *time.Time `json:"matching_date,omitempty"`
}

// NewCreateQuestionResponse instantiates a new CreateQuestionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateQuestionResponse() *CreateQuestionResponse {
	this := CreateQuestionResponse{}
	return &this
}

// NewCreateQuestionResponseWithDefaults instantiates a new CreateQuestionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateQuestionResponseWithDefaults() *CreateQuestionResponse {
	this := CreateQuestionResponse{}
	return &this
}

// GetMatchingId returns the MatchingId field value if set, zero value otherwise.
func (o *CreateQuestionResponse) GetMatchingId() string {
	if o == nil || IsNil(o.MatchingId) {
		var ret string
		return ret
	}
	return *o.MatchingId
}

// GetMatchingIdOk returns a tuple with the MatchingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateQuestionResponse) GetMatchingIdOk() (*string, bool) {
	if o == nil || IsNil(o.MatchingId) {
		return nil, false
	}
	return o.MatchingId, true
}

// HasMatchingId returns a boolean if a field has been set.
func (o *CreateQuestionResponse) HasMatchingId() bool {
	if o != nil && !IsNil(o.MatchingId) {
		return true
	}

	return false
}

// SetMatchingId gets a reference to the given string and assigns it to the MatchingId field.
func (o *CreateQuestionResponse) SetMatchingId(v string) {
	o.MatchingId = &v
}

// GetSenderUserId returns the SenderUserId field value if set, zero value otherwise.
func (o *CreateQuestionResponse) GetSenderUserId() string {
	if o == nil || IsNil(o.SenderUserId) {
		var ret string
		return ret
	}
	return *o.SenderUserId
}

// GetSenderUserIdOk returns a tuple with the SenderUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateQuestionResponse) GetSenderUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.SenderUserId) {
		return nil, false
	}
	return o.SenderUserId, true
}

// HasSenderUserId returns a boolean if a field has been set.
func (o *CreateQuestionResponse) HasSenderUserId() bool {
	if o != nil && !IsNil(o.SenderUserId) {
		return true
	}

	return false
}

// SetSenderUserId gets a reference to the given string and assigns it to the SenderUserId field.
func (o *CreateQuestionResponse) SetSenderUserId(v string) {
	o.SenderUserId = &v
}

// GetReceiverUserId returns the ReceiverUserId field value if set, zero value otherwise.
func (o *CreateQuestionResponse) GetReceiverUserId() string {
	if o == nil || IsNil(o.ReceiverUserId) {
		var ret string
		return ret
	}
	return *o.ReceiverUserId
}

// GetReceiverUserIdOk returns a tuple with the ReceiverUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateQuestionResponse) GetReceiverUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverUserId) {
		return nil, false
	}
	return o.ReceiverUserId, true
}

// HasReceiverUserId returns a boolean if a field has been set.
func (o *CreateQuestionResponse) HasReceiverUserId() bool {
	if o != nil && !IsNil(o.ReceiverUserId) {
		return true
	}

	return false
}

// SetReceiverUserId gets a reference to the given string and assigns it to the ReceiverUserId field.
func (o *CreateQuestionResponse) SetReceiverUserId(v string) {
	o.ReceiverUserId = &v
}

// GetMatchingDate returns the MatchingDate field value if set, zero value otherwise.
func (o *CreateQuestionResponse) GetMatchingDate() time.Time {
	if o == nil || IsNil(o.MatchingDate) {
		var ret time.Time
		return ret
	}
	return *o.MatchingDate
}

// GetMatchingDateOk returns a tuple with the MatchingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateQuestionResponse) GetMatchingDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MatchingDate) {
		return nil, false
	}
	return o.MatchingDate, true
}

// HasMatchingDate returns a boolean if a field has been set.
func (o *CreateQuestionResponse) HasMatchingDate() bool {
	if o != nil && !IsNil(o.MatchingDate) {
		return true
	}

	return false
}

// SetMatchingDate gets a reference to the given time.Time and assigns it to the MatchingDate field.
func (o *CreateQuestionResponse) SetMatchingDate(v time.Time) {
	o.MatchingDate = &v
}

func (o CreateQuestionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateQuestionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchingId) {
		toSerialize["matching_id"] = o.MatchingId
	}
	if !IsNil(o.SenderUserId) {
		toSerialize["sender_user_id"] = o.SenderUserId
	}
	if !IsNil(o.ReceiverUserId) {
		toSerialize["receiver_user_id"] = o.ReceiverUserId
	}
	if !IsNil(o.MatchingDate) {
		toSerialize["matching_date"] = o.MatchingDate
	}
	return toSerialize, nil
}

type NullableCreateQuestionResponse struct {
	value *CreateQuestionResponse
	isSet bool
}

func (v NullableCreateQuestionResponse) Get() *CreateQuestionResponse {
	return v.value
}

func (v *NullableCreateQuestionResponse) Set(val *CreateQuestionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateQuestionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateQuestionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateQuestionResponse(val *CreateQuestionResponse) *NullableCreateQuestionResponse {
	return &NullableCreateQuestionResponse{value: val, isSet: true}
}

func (v NullableCreateQuestionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateQuestionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


