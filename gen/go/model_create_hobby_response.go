/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateHobbyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateHobbyResponse{}

// CreateHobbyResponse struct for CreateHobbyResponse
type CreateHobbyResponse struct {
	Hobby *HobbyDetails `json:"hobby,omitempty"`
}

// NewCreateHobbyResponse instantiates a new CreateHobbyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateHobbyResponse() *CreateHobbyResponse {
	this := CreateHobbyResponse{}
	return &this
}

// NewCreateHobbyResponseWithDefaults instantiates a new CreateHobbyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateHobbyResponseWithDefaults() *CreateHobbyResponse {
	this := CreateHobbyResponse{}
	return &this
}

// GetHobby returns the Hobby field value if set, zero value otherwise.
func (o *CreateHobbyResponse) GetHobby() HobbyDetails {
	if o == nil || IsNil(o.Hobby) {
		var ret HobbyDetails
		return ret
	}
	return *o.Hobby
}

// GetHobbyOk returns a tuple with the Hobby field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateHobbyResponse) GetHobbyOk() (*HobbyDetails, bool) {
	if o == nil || IsNil(o.Hobby) {
		return nil, false
	}
	return o.Hobby, true
}

// HasHobby returns a boolean if a field has been set.
func (o *CreateHobbyResponse) HasHobby() bool {
	if o != nil && !IsNil(o.Hobby) {
		return true
	}

	return false
}

// SetHobby gets a reference to the given HobbyDetails and assigns it to the Hobby field.
func (o *CreateHobbyResponse) SetHobby(v HobbyDetails) {
	o.Hobby = &v
}

func (o CreateHobbyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateHobbyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hobby) {
		toSerialize["hobby"] = o.Hobby
	}
	return toSerialize, nil
}

type NullableCreateHobbyResponse struct {
	value *CreateHobbyResponse
	isSet bool
}

func (v NullableCreateHobbyResponse) Get() *CreateHobbyResponse {
	return v.value
}

func (v *NullableCreateHobbyResponse) Set(val *CreateHobbyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateHobbyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateHobbyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateHobbyResponse(val *CreateHobbyResponse) *NullableCreateHobbyResponse {
	return &NullableCreateHobbyResponse{value: val, isSet: true}
}

func (v NullableCreateHobbyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateHobbyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


