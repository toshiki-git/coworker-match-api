/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateQuestionReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateQuestionReq{}

// CreateQuestionReq struct for CreateQuestionReq
type CreateQuestionReq struct {
	Answers []Answer `json:"answers"`
}

type _CreateQuestionReq CreateQuestionReq

// NewCreateQuestionReq instantiates a new CreateQuestionReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateQuestionReq(answers []Answer) *CreateQuestionReq {
	this := CreateQuestionReq{}
	this.Answers = answers
	return &this
}

// NewCreateQuestionReqWithDefaults instantiates a new CreateQuestionReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateQuestionReqWithDefaults() *CreateQuestionReq {
	this := CreateQuestionReq{}
	return &this
}

// GetAnswers returns the Answers field value
func (o *CreateQuestionReq) GetAnswers() []Answer {
	if o == nil {
		var ret []Answer
		return ret
	}

	return o.Answers
}

// GetAnswersOk returns a tuple with the Answers field value
// and a boolean to check if the value has been set.
func (o *CreateQuestionReq) GetAnswersOk() ([]Answer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Answers, true
}

// SetAnswers sets field value
func (o *CreateQuestionReq) SetAnswers(v []Answer) {
	o.Answers = v
}

func (o CreateQuestionReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateQuestionReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["answers"] = o.Answers
	return toSerialize, nil
}

func (o *CreateQuestionReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"answers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateQuestionReq := _CreateQuestionReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateQuestionReq)

	if err != nil {
		return err
	}

	*o = CreateQuestionReq(varCreateQuestionReq)

	return err
}

type NullableCreateQuestionReq struct {
	value *CreateQuestionReq
	isSet bool
}

func (v NullableCreateQuestionReq) Get() *CreateQuestionReq {
	return v.value
}

func (v *NullableCreateQuestionReq) Set(val *CreateQuestionReq) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateQuestionReq) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateQuestionReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateQuestionReq(val *CreateQuestionReq) *NullableCreateQuestionReq {
	return &NullableCreateQuestionReq{value: val, isSet: true}
}

func (v NullableCreateQuestionReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateQuestionReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


