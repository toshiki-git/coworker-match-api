/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetMatchingRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMatchingRes{}

// GetMatchingRes struct for GetMatchingRes
type GetMatchingRes struct {
	Matchings []GetMatchingResMatchingsInner `json:"matchings"`
}

type _GetMatchingRes GetMatchingRes

// NewGetMatchingRes instantiates a new GetMatchingRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMatchingRes(matchings []GetMatchingResMatchingsInner) *GetMatchingRes {
	this := GetMatchingRes{}
	this.Matchings = matchings
	return &this
}

// NewGetMatchingResWithDefaults instantiates a new GetMatchingRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMatchingResWithDefaults() *GetMatchingRes {
	this := GetMatchingRes{}
	return &this
}

// GetMatchings returns the Matchings field value
func (o *GetMatchingRes) GetMatchings() []GetMatchingResMatchingsInner {
	if o == nil {
		var ret []GetMatchingResMatchingsInner
		return ret
	}

	return o.Matchings
}

// GetMatchingsOk returns a tuple with the Matchings field value
// and a boolean to check if the value has been set.
func (o *GetMatchingRes) GetMatchingsOk() ([]GetMatchingResMatchingsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Matchings, true
}

// SetMatchings sets field value
func (o *GetMatchingRes) SetMatchings(v []GetMatchingResMatchingsInner) {
	o.Matchings = v
}

func (o GetMatchingRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMatchingRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["matchings"] = o.Matchings
	return toSerialize, nil
}

func (o *GetMatchingRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"matchings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMatchingRes := _GetMatchingRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetMatchingRes)

	if err != nil {
		return err
	}

	*o = GetMatchingRes(varGetMatchingRes)

	return err
}

type NullableGetMatchingRes struct {
	value *GetMatchingRes
	isSet bool
}

func (v NullableGetMatchingRes) Get() *GetMatchingRes {
	return v.value
}

func (v *NullableGetMatchingRes) Set(val *GetMatchingRes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMatchingRes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMatchingRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMatchingRes(val *GetMatchingRes) *NullableGetMatchingRes {
	return &NullableGetMatchingRes{value: val, isSet: true}
}

func (v NullableGetMatchingRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMatchingRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


