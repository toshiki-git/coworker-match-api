/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMessageRequest{}

// UpdateMessageRequest struct for UpdateMessageRequest
type UpdateMessageRequest struct {
	MessageText *string `json:"message_text,omitempty"`
}

// NewUpdateMessageRequest instantiates a new UpdateMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMessageRequest() *UpdateMessageRequest {
	this := UpdateMessageRequest{}
	return &this
}

// NewUpdateMessageRequestWithDefaults instantiates a new UpdateMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMessageRequestWithDefaults() *UpdateMessageRequest {
	this := UpdateMessageRequest{}
	return &this
}

// GetMessageText returns the MessageText field value if set, zero value otherwise.
func (o *UpdateMessageRequest) GetMessageText() string {
	if o == nil || IsNil(o.MessageText) {
		var ret string
		return ret
	}
	return *o.MessageText
}

// GetMessageTextOk returns a tuple with the MessageText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMessageRequest) GetMessageTextOk() (*string, bool) {
	if o == nil || IsNil(o.MessageText) {
		return nil, false
	}
	return o.MessageText, true
}

// HasMessageText returns a boolean if a field has been set.
func (o *UpdateMessageRequest) HasMessageText() bool {
	if o != nil && !IsNil(o.MessageText) {
		return true
	}

	return false
}

// SetMessageText gets a reference to the given string and assigns it to the MessageText field.
func (o *UpdateMessageRequest) SetMessageText(v string) {
	o.MessageText = &v
}

func (o UpdateMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageText) {
		toSerialize["message_text"] = o.MessageText
	}
	return toSerialize, nil
}

type NullableUpdateMessageRequest struct {
	value *UpdateMessageRequest
	isSet bool
}

func (v NullableUpdateMessageRequest) Get() *UpdateMessageRequest {
	return v.value
}

func (v *NullableUpdateMessageRequest) Set(val *UpdateMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMessageRequest(val *UpdateMessageRequest) *NullableUpdateMessageRequest {
	return &NullableUpdateMessageRequest{value: val, isSet: true}
}

func (v NullableUpdateMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


