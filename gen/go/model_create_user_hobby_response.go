/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateUserHobbyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserHobbyResponse{}

// CreateUserHobbyResponse struct for CreateUserHobbyResponse
type CreateUserHobbyResponse struct {
	HobbyIds []string `json:"hobby_ids,omitempty"`
}

// NewCreateUserHobbyResponse instantiates a new CreateUserHobbyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserHobbyResponse() *CreateUserHobbyResponse {
	this := CreateUserHobbyResponse{}
	return &this
}

// NewCreateUserHobbyResponseWithDefaults instantiates a new CreateUserHobbyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserHobbyResponseWithDefaults() *CreateUserHobbyResponse {
	this := CreateUserHobbyResponse{}
	return &this
}

// GetHobbyIds returns the HobbyIds field value if set, zero value otherwise.
func (o *CreateUserHobbyResponse) GetHobbyIds() []string {
	if o == nil || IsNil(o.HobbyIds) {
		var ret []string
		return ret
	}
	return o.HobbyIds
}

// GetHobbyIdsOk returns a tuple with the HobbyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserHobbyResponse) GetHobbyIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.HobbyIds) {
		return nil, false
	}
	return o.HobbyIds, true
}

// HasHobbyIds returns a boolean if a field has been set.
func (o *CreateUserHobbyResponse) HasHobbyIds() bool {
	if o != nil && !IsNil(o.HobbyIds) {
		return true
	}

	return false
}

// SetHobbyIds gets a reference to the given []string and assigns it to the HobbyIds field.
func (o *CreateUserHobbyResponse) SetHobbyIds(v []string) {
	o.HobbyIds = v
}

func (o CreateUserHobbyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserHobbyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HobbyIds) {
		toSerialize["hobby_ids"] = o.HobbyIds
	}
	return toSerialize, nil
}

type NullableCreateUserHobbyResponse struct {
	value *CreateUserHobbyResponse
	isSet bool
}

func (v NullableCreateUserHobbyResponse) Get() *CreateUserHobbyResponse {
	return v.value
}

func (v *NullableCreateUserHobbyResponse) Set(val *CreateUserHobbyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserHobbyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserHobbyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserHobbyResponse(val *CreateUserHobbyResponse) *NullableCreateUserHobbyResponse {
	return &NullableCreateUserHobbyResponse{value: val, isSet: true}
}

func (v NullableCreateUserHobbyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserHobbyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


