/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMessageResponse{}

// CreateMessageResponse struct for CreateMessageResponse
type CreateMessageResponse struct {
	MessageId *string `json:"message_id,omitempty"`
}

// NewCreateMessageResponse instantiates a new CreateMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMessageResponse() *CreateMessageResponse {
	this := CreateMessageResponse{}
	return &this
}

// NewCreateMessageResponseWithDefaults instantiates a new CreateMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMessageResponseWithDefaults() *CreateMessageResponse {
	this := CreateMessageResponse{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *CreateMessageResponse) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMessageResponse) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *CreateMessageResponse) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *CreateMessageResponse) SetMessageId(v string) {
	o.MessageId = &v
}

func (o CreateMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageId) {
		toSerialize["message_id"] = o.MessageId
	}
	return toSerialize, nil
}

type NullableCreateMessageResponse struct {
	value *CreateMessageResponse
	isSet bool
}

func (v NullableCreateMessageResponse) Get() *CreateMessageResponse {
	return v.value
}

func (v *NullableCreateMessageResponse) Set(val *CreateMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMessageResponse(val *CreateMessageResponse) *NullableCreateMessageResponse {
	return &NullableCreateMessageResponse{value: val, isSet: true}
}

func (v NullableCreateMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


