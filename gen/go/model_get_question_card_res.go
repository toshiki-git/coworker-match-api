/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetQuestionCardRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetQuestionCardRes{}

// GetQuestionCardRes struct for GetQuestionCardRes
type GetQuestionCardRes struct {
	QuestionCards []GetQuestionCardResQuestionCardsInner `json:"questionCards"`
}

type _GetQuestionCardRes GetQuestionCardRes

// NewGetQuestionCardRes instantiates a new GetQuestionCardRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetQuestionCardRes(questionCards []GetQuestionCardResQuestionCardsInner) *GetQuestionCardRes {
	this := GetQuestionCardRes{}
	this.QuestionCards = questionCards
	return &this
}

// NewGetQuestionCardResWithDefaults instantiates a new GetQuestionCardRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetQuestionCardResWithDefaults() *GetQuestionCardRes {
	this := GetQuestionCardRes{}
	return &this
}

// GetQuestionCards returns the QuestionCards field value
func (o *GetQuestionCardRes) GetQuestionCards() []GetQuestionCardResQuestionCardsInner {
	if o == nil {
		var ret []GetQuestionCardResQuestionCardsInner
		return ret
	}

	return o.QuestionCards
}

// GetQuestionCardsOk returns a tuple with the QuestionCards field value
// and a boolean to check if the value has been set.
func (o *GetQuestionCardRes) GetQuestionCardsOk() ([]GetQuestionCardResQuestionCardsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.QuestionCards, true
}

// SetQuestionCards sets field value
func (o *GetQuestionCardRes) SetQuestionCards(v []GetQuestionCardResQuestionCardsInner) {
	o.QuestionCards = v
}

func (o GetQuestionCardRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetQuestionCardRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["questionCards"] = o.QuestionCards
	return toSerialize, nil
}

func (o *GetQuestionCardRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"questionCards",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetQuestionCardRes := _GetQuestionCardRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetQuestionCardRes)

	if err != nil {
		return err
	}

	*o = GetQuestionCardRes(varGetQuestionCardRes)

	return err
}

type NullableGetQuestionCardRes struct {
	value *GetQuestionCardRes
	isSet bool
}

func (v NullableGetQuestionCardRes) Get() *GetQuestionCardRes {
	return v.value
}

func (v *NullableGetQuestionCardRes) Set(val *GetQuestionCardRes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetQuestionCardRes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetQuestionCardRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetQuestionCardRes(val *GetQuestionCardRes) *NullableGetQuestionCardRes {
	return &NullableGetQuestionCardRes{value: val, isSet: true}
}

func (v NullableGetQuestionCardRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetQuestionCardRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


