/*
CoWorkerMatch API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetQuestionRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetQuestionRes{}

// GetQuestionRes struct for GetQuestionRes
type GetQuestionRes struct {
	Questions []Question `json:"questions"`
}

type _GetQuestionRes GetQuestionRes

// NewGetQuestionRes instantiates a new GetQuestionRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetQuestionRes(questions []Question) *GetQuestionRes {
	this := GetQuestionRes{}
	this.Questions = questions
	return &this
}

// NewGetQuestionResWithDefaults instantiates a new GetQuestionRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetQuestionResWithDefaults() *GetQuestionRes {
	this := GetQuestionRes{}
	return &this
}

// GetQuestions returns the Questions field value
func (o *GetQuestionRes) GetQuestions() []Question {
	if o == nil {
		var ret []Question
		return ret
	}

	return o.Questions
}

// GetQuestionsOk returns a tuple with the Questions field value
// and a boolean to check if the value has been set.
func (o *GetQuestionRes) GetQuestionsOk() ([]Question, bool) {
	if o == nil {
		return nil, false
	}
	return o.Questions, true
}

// SetQuestions sets field value
func (o *GetQuestionRes) SetQuestions(v []Question) {
	o.Questions = v
}

func (o GetQuestionRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetQuestionRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["questions"] = o.Questions
	return toSerialize, nil
}

func (o *GetQuestionRes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"questions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetQuestionRes := _GetQuestionRes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetQuestionRes)

	if err != nil {
		return err
	}

	*o = GetQuestionRes(varGetQuestionRes)

	return err
}

type NullableGetQuestionRes struct {
	value *GetQuestionRes
	isSet bool
}

func (v NullableGetQuestionRes) Get() *GetQuestionRes {
	return v.value
}

func (v *NullableGetQuestionRes) Set(val *GetQuestionRes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetQuestionRes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetQuestionRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetQuestionRes(val *GetQuestionRes) *NullableGetQuestionRes {
	return &NullableGetQuestionRes{value: val, isSet: true}
}

func (v NullableGetQuestionRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetQuestionRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


