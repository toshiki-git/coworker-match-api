name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  ARTIFACT_REGISTRY_LOCATION: asia-northeast1
  PROJECT_ID: coworker-match
  ARTIFACT_REGISTRY_REPO: cwm-api-dev-repo
  ARTIFACT_REGISTRY_IMAGE: cwm-api-dev
  CLOUD_RUN_SERVICE: cwm-api-dev
  CLOUD_RUN_REGION: asia-northeast1

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: |
          gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t "${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.ARTIFACT_REGISTRY_IMAGE }}:${{ github.sha }}" .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push "${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.ARTIFACT_REGISTRY_IMAGE }}:${{ github.sha }}"

      - name: Deploy
        env:
          API_PORT: 8080
          INSTANCE_UNIX_SOCKET: /cloudsql/${{ secrets.CLOUD_SQL_INSTANCE }}
          DB_HOST: postgres
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        run: |
          gcloud run deploy ${{ env.CLOUD_RUN_SERVICE }} \
            --image "${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.ARTIFACT_REGISTRY_IMAGE }}:${{ github.sha }}" \
            --region ${{ env.CLOUD_RUN_REGION }} \
            --add-cloudsql-instances=${{ secrets.CLOUD_SQL_INSTANCE }} \
            --service-account=${{ secrets.SERVICE_ACCOUNT }} \
            --platform managed \
            --update-env-vars=API_PORT=$API_PORT,INSTANCE_UNIX_SOCKET=$INSTANCE_UNIX_SOCKET,DB_HOST=$DB_HOST,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,DB_NAME=$DB_NAME,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
